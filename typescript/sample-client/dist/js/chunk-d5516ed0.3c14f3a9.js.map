{"version":3,"sources":["webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/Translations-c833f663.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-d7afd96c.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-select-mfa-type.entry.js"],"names":["AuthStrings","InteractionsStrings","Translations","Object","assign","AuthState","MfaOption","ChallengeName","AuthFormField","UsernameAlias","USERNAME_SUFFIX","EMAIL_SUFFIX","CODE_SUFFIX","PHONE_SUFFIX","PASSWORD_SUFFIX","COUNTRY_DIAL_CODE_SUFFIX","COUNTRY_DIAL_CODE_DEFAULT","AUTH_SOURCE_KEY","AUTHENTICATOR_AUTHSTATE","PHONE_EMPTY_ERROR_MESSAGE","NO_AUTH_MODULE_FOUND","NO_STORAGE_MODULE_FOUND","NO_INTERACTIONS_MODULE_FOUND","SETUP_TOTP","USER_NOT_SETUP_SOFTWARE_TOKEN_MFA","USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA","SUCCESS","AUTH_CHANNEL","UI_AUTH_CHANNEL","TOAST_AUTH_ERROR_EVENT","AUTH_STATE_CHANGE_EVENT","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","logger","AmplifySelectMFAType","class_1","hostRef","_this","handleSubmit","event","verify","TOTPSetup","selectMessage","MFAMethod","isTOTP","isNoMFA","isSMS","loading","isToastVisible","prototype","handleRadioButtonChange","_a","target","type","checked","checkType","includes","SMS","TOTP","NOMFA","user","preferredMFAData","error_1","message","preventDefault","debug","authData","setPreferredMFA","Error","get","SUCCESS_MFA_TYPE","SETUP_TOTP_REQUIRED","UNABLE_TO_SETUP_MFA_AT_THIS_TIME","contentBuilder","MFATypes","keys","LESS_THAN_TWO_MFA_VALUES_MESSAGE","Optional","submitButtonText","SELECT_MFA_TYPE_SUBMIT_BUTTON_TEXT","headerText","SELECT_MFA_TYPE_HEADER_TEXT","key","name","handleInputChange","renderToast","handleClose","render"],"mappings":"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","file":"js/chunk-d5516ed0.3c14f3a9.js","sourcesContent":["import { AuthErrorStrings } from '@aws-amplify/auth';\nvar AuthStrings;\n(function (AuthStrings) {\n    AuthStrings[\"BACK_TO_SIGN_IN\"] = \"Back to Sign In\";\n    AuthStrings[\"CHANGE_PASSWORD_ACTION\"] = \"Change\";\n    AuthStrings[\"CHANGE_PASSWORD\"] = \"Change Password\";\n    AuthStrings[\"CODE_LABEL\"] = \"Verification code\";\n    AuthStrings[\"CODE_PLACEHOLDER\"] = \"Enter code\";\n    AuthStrings[\"CONFIRM_SIGN_UP_CODE_LABEL\"] = \"Confirmation Code\";\n    AuthStrings[\"CONFIRM_SIGN_UP_CODE_PLACEHOLDER\"] = \"Enter your code\";\n    AuthStrings[\"CONFIRM_SIGN_UP_HEADER_TEXT\"] = \"Confirm Sign up\";\n    AuthStrings[\"CONFIRM_SIGN_UP_LOST_CODE\"] = \"Lost your code?\";\n    AuthStrings[\"CONFIRM_SIGN_UP_RESEND_CODE\"] = \"Resend Code\";\n    AuthStrings[\"CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT\"] = \"Confirm\";\n    AuthStrings[\"CONFIRM_SMS_CODE\"] = \"Confirm SMS Code\";\n    AuthStrings[\"CONFIRM_TOTP_CODE\"] = \"Confirm TOTP Code\";\n    AuthStrings[\"CONFIRM\"] = \"Confirm\";\n    AuthStrings[\"CREATE_ACCOUNT_TEXT\"] = \"Create account\";\n    AuthStrings[\"EMAIL_LABEL\"] = \"Email Address *\";\n    AuthStrings[\"EMAIL_PLACEHOLDER\"] = \"Enter your email address\";\n    AuthStrings[\"FORGOT_PASSWORD_TEXT\"] = \"Forgot your password?\";\n    AuthStrings[\"LESS_THAN_TWO_MFA_VALUES_MESSAGE\"] = \"Less than two MFA types available\";\n    AuthStrings[\"NEW_PASSWORD_LABEL\"] = \"New password\";\n    AuthStrings[\"NEW_PASSWORD_PLACEHOLDER\"] = \"Enter your new password\";\n    AuthStrings[\"NO_ACCOUNT_TEXT\"] = \"No account?\";\n    AuthStrings[\"USERNAME_REMOVE_WHITESPACE\"] = \"Username cannot contain whitespace\";\n    AuthStrings[\"PASSWORD_REMOVE_WHITESPACE\"] = \"Password cannot start or end with whitespace\";\n    AuthStrings[\"PASSWORD_LABEL\"] = \"Password *\";\n    AuthStrings[\"PASSWORD_PLACEHOLDER\"] = \"Enter your password\";\n    AuthStrings[\"PHONE_LABEL\"] = \"Phone Number *\";\n    AuthStrings[\"PHONE_PLACEHOLDER\"] = \"(555) 555-1212\";\n    AuthStrings[\"QR_CODE_ALT\"] = \"qrcode\";\n    AuthStrings[\"RESET_PASSWORD_TEXT\"] = \"Reset password\";\n    AuthStrings[\"RESET_YOUR_PASSWORD\"] = \"Reset your password\";\n    AuthStrings[\"SELECT_MFA_TYPE_HEADER_TEXT\"] = \"Select MFA Type\";\n    AuthStrings[\"SELECT_MFA_TYPE_SUBMIT_BUTTON_TEXT\"] = \"Verify\";\n    AuthStrings[\"SEND_CODE\"] = \"Send Code\";\n    AuthStrings[\"SUBMIT\"] = \"Submit\";\n    AuthStrings[\"SETUP_TOTP_REQUIRED\"] = \"TOTP needs to be configured\";\n    AuthStrings[\"SIGN_IN_ACTION\"] = \"Sign In\";\n    AuthStrings[\"SIGN_IN_HEADER_TEXT\"] = \"Sign in to your account\";\n    AuthStrings[\"SIGN_IN_TEXT\"] = \"Sign in\";\n    AuthStrings[\"SIGN_IN_WITH_AMAZON\"] = \"Sign in with Amazon\";\n    AuthStrings[\"SIGN_IN_WITH_AUTH0\"] = \"Sign in with Auth0\";\n    AuthStrings[\"SIGN_IN_WITH_AWS\"] = \"Sign in with AWS\";\n    AuthStrings[\"SIGN_IN_WITH_FACEBOOK\"] = \"Sign in with Facebook\";\n    AuthStrings[\"SIGN_IN_WITH_GOOGLE\"] = \"Sign in with Google\";\n    AuthStrings[\"SIGN_OUT\"] = \"Sign Out\";\n    AuthStrings[\"SIGN_UP_EMAIL_PLACEHOLDER\"] = \"Email\";\n    AuthStrings[\"SIGN_UP_HAVE_ACCOUNT_TEXT\"] = \"Have an account?\";\n    AuthStrings[\"SIGN_UP_HEADER_TEXT\"] = \"Create a new account\";\n    AuthStrings[\"SIGN_UP_PASSWORD_PLACEHOLDER\"] = \"Password\";\n    AuthStrings[\"SIGN_UP_SUBMIT_BUTTON_TEXT\"] = \"Create Account\";\n    AuthStrings[\"SIGN_UP_USERNAME_PLACEHOLDER\"] = \"Username\";\n    AuthStrings[\"SUCCESS_MFA_TYPE\"] = \"Success! Your MFA Type is now:\";\n    AuthStrings[\"TOTP_HEADER_TEXT\"] = \"Scan then enter verification code\";\n    AuthStrings[\"TOTP_LABEL\"] = \"Enter Security Code:\";\n    AuthStrings[\"TOTP_ISSUER\"] = \"AWSCognito\";\n    AuthStrings[\"TOTP_SETUP_FAILURE\"] = \"TOTP Setup has failed\";\n    AuthStrings[\"TOTP_SUBMIT_BUTTON_TEXT\"] = \"Verify Security Token\";\n    AuthStrings[\"TOTP_SUCCESS_MESSAGE\"] = \"Setup TOTP successfully!\";\n    AuthStrings[\"UNABLE_TO_SETUP_MFA_AT_THIS_TIME\"] = \"Failed! Unable to configure MFA at this time\";\n    AuthStrings[\"USERNAME_LABEL\"] = \"Username *\";\n    AuthStrings[\"USERNAME_PLACEHOLDER\"] = \"Enter your username\";\n    AuthStrings[\"VERIFY_CONTACT_EMAIL_LABEL\"] = \"Email\";\n    AuthStrings[\"VERIFY_CONTACT_HEADER_TEXT\"] = \"Account recovery requires verified contact information\";\n    AuthStrings[\"VERIFY_CONTACT_PHONE_LABEL\"] = \"Phone Number\";\n    AuthStrings[\"VERIFY_CONTACT_SUBMIT_LABEL\"] = \"Submit\";\n    AuthStrings[\"VERIFY_CONTACT_VERIFY_LABEL\"] = \"Verify\";\n    AuthStrings[\"ADDRESS_LABEL\"] = \"Address\";\n    AuthStrings[\"ADDRESS_PLACEHOLDER\"] = \"Enter your address\";\n    AuthStrings[\"NICKNAME_LABEL\"] = \"Nickname\";\n    AuthStrings[\"NICKNAME_PLACEHOLDER\"] = \"Enter your nickname\";\n    AuthStrings[\"BIRTHDATE_LABEL\"] = \"Birthday\";\n    AuthStrings[\"BIRTHDATE_PLACEHOLDER\"] = \"Enter your birthday\";\n    AuthStrings[\"PICTURE_LABEL\"] = \"Picture URL\";\n    AuthStrings[\"PICTURE_PLACEHOLDER\"] = \"Enter your picture URL\";\n    AuthStrings[\"FAMILY_NAME_LABEL\"] = \"Family Name\";\n    AuthStrings[\"FAMILY_NAME_PLACEHOLDER\"] = \"Enter your family name\";\n    AuthStrings[\"PREFERRED_USERNAME_LABEL\"] = \"Preferred Username\";\n    AuthStrings[\"PREFERRED_USERNAME_PLACEHOLDER\"] = \"Enter your preferred username\";\n    AuthStrings[\"GENDER_LABEL\"] = \"Gender\";\n    AuthStrings[\"GENDER_PLACEHOLDER\"] = \"Enter your gender\";\n    AuthStrings[\"PROFILE_LABEL\"] = \"Profile URL\";\n    AuthStrings[\"PROFILE_PLACEHOLDER\"] = \"Enter your profile URL\";\n    AuthStrings[\"GIVEN_NAME_LABEL\"] = \"First Name\";\n    AuthStrings[\"GIVEN_NAME_PLACEHOLDER\"] = \"Enter your first name\";\n    AuthStrings[\"ZONEINFO_LABEL\"] = \"Time zone\";\n    AuthStrings[\"ZONEINFO_PLACEHOLDER\"] = \"Enter your time zone\";\n    AuthStrings[\"LOCALE_LABEL\"] = \"Locale\";\n    AuthStrings[\"LOCALE_PLACEHOLDER\"] = \"Enter your locale\";\n    AuthStrings[\"UPDATED_AT_LABEL\"] = \"Updated At\";\n    AuthStrings[\"UPDATED_AT_PLACEHOLDER\"] = \"Enter the time the information was last updated\";\n    AuthStrings[\"MIDDLE_NAME_LABEL\"] = \"Middle Name\";\n    AuthStrings[\"MIDDLE_NAME_PLACEHOLDER\"] = \"Enter your middle name\";\n    AuthStrings[\"WEBSITE_LABEL\"] = \"Website\";\n    AuthStrings[\"WEBSITE_PLACEHOLDER\"] = \"Enter your website\";\n    AuthStrings[\"NAME_LABEL\"] = \"Full Name\";\n    AuthStrings[\"NAME_PLACEHOLDER\"] = \"Enter your full name\";\n    AuthStrings[\"PHOTO_PICKER_TITLE\"] = \"Picker Title\";\n    AuthStrings[\"PHOTO_PICKER_HINT\"] = \"Ancillary text or content may occupy this space here\";\n    AuthStrings[\"PHOTO_PICKER_PLACEHOLDER_HINT\"] = \"Placeholder hint\";\n    AuthStrings[\"PHOTO_PICKER_BUTTON_TEXT\"] = \"Button\";\n    AuthStrings[\"IMAGE_PICKER_TITLE\"] = \"Add Profile Photo\";\n    AuthStrings[\"IMAGE_PICKER_HINT\"] = \"Preview the image before upload\";\n    AuthStrings[\"IMAGE_PICKER_PLACEHOLDER_HINT\"] = \"Tap to image select\";\n    AuthStrings[\"IMAGE_PICKER_BUTTON_TEXT\"] = \"Upload\";\n    AuthStrings[\"PICKER_TEXT\"] = \"Pick a file\";\n    AuthStrings[\"TEXT_FALLBACK_CONTENT\"] = \"Fallback Content\";\n    AuthStrings[\"CONFIRM_SIGN_UP_FAILED\"] = \"Confirm Sign Up Failed\";\n    AuthStrings[\"SIGN_UP_FAILED\"] = \"Sign Up Failed\";\n})(AuthStrings || (AuthStrings = {}));\nvar InteractionsStrings;\n(function (InteractionsStrings) {\n    InteractionsStrings[\"CHATBOT_TITLE\"] = \"ChatBot Lex\";\n    InteractionsStrings[\"TEXT_INPUT_PLACEHOLDER\"] = \"Write a message\";\n    InteractionsStrings[\"VOICE_INPUT_PLACEHOLDER\"] = \"Click mic to speak\";\n    InteractionsStrings[\"CHAT_DISABLED_ERROR\"] = \"Error: Either voice or text must be enabled for the chatbot\";\n    InteractionsStrings[\"NO_BOT_NAME_ERROR\"] = \"Error: Bot name must be provided to ChatBot\";\n})(InteractionsStrings || (InteractionsStrings = {}));\nvar Translations = Object.assign(Object.assign(Object.assign({}, AuthStrings), AuthErrorStrings), InteractionsStrings);\nexport { Translations as T };\n","// TODO: Move these values to or extract them from the Cognito Provider in the Auth category for Auth V2\nvar AuthState;\n(function (AuthState) {\n    AuthState[\"SignUp\"] = \"signup\";\n    AuthState[\"SignOut\"] = \"signout\";\n    AuthState[\"SignIn\"] = \"signin\";\n    AuthState[\"Loading\"] = \"loading\";\n    AuthState[\"SignedOut\"] = \"signedout\";\n    AuthState[\"SignedIn\"] = \"signedin\";\n    AuthState[\"SigningUp\"] = \"signingup\";\n    AuthState[\"ConfirmSignUp\"] = \"confirmSignUp\";\n    AuthState[\"confirmingSignUpCustomFlow\"] = \"confirmsignupcustomflow\";\n    AuthState[\"ConfirmSignIn\"] = \"confirmSignIn\";\n    AuthState[\"confirmingSignInCustomFlow\"] = \"confirmingsignincustomflow\";\n    AuthState[\"VerifyingAttributes\"] = \"verifyingattributes\";\n    AuthState[\"ForgotPassword\"] = \"forgotpassword\";\n    AuthState[\"ResetPassword\"] = \"resettingpassword\";\n    AuthState[\"SettingMFA\"] = \"settingMFA\";\n    AuthState[\"TOTPSetup\"] = \"TOTPSetup\";\n    AuthState[\"CustomConfirmSignIn\"] = \"customConfirmSignIn\";\n    AuthState[\"VerifyContact\"] = \"verifyContact\";\n})(AuthState || (AuthState = {}));\nvar MfaOption;\n(function (MfaOption) {\n    MfaOption[\"TOTP\"] = \"TOTP\";\n    MfaOption[\"SMS\"] = \"SMS\";\n    MfaOption[\"NOMFA\"] = \"NOMFA\";\n})(MfaOption || (MfaOption = {}));\nvar ChallengeName;\n(function (ChallengeName) {\n    ChallengeName[\"SoftwareTokenMFA\"] = \"SOFTWARE_TOKEN_MFA\";\n    ChallengeName[\"SMSMFA\"] = \"SMS_MFA\";\n    ChallengeName[\"NewPasswordRequired\"] = \"NEW_PASSWORD_REQUIRED\";\n    ChallengeName[\"MFASetup\"] = \"MFA_SETUP\";\n    ChallengeName[\"CustomChallenge\"] = \"CUSTOM_CHALLENGE\";\n})(ChallengeName || (ChallengeName = {}));\nvar AuthFormField;\n(function (AuthFormField) {\n    AuthFormField[\"Password\"] = \"password\";\n})(AuthFormField || (AuthFormField = {}));\nvar UsernameAlias;\n(function (UsernameAlias) {\n    UsernameAlias[\"username\"] = \"username\";\n    UsernameAlias[\"email\"] = \"email\";\n    UsernameAlias[\"phone_number\"] = \"phone_number\";\n})(UsernameAlias || (UsernameAlias = {}));\nexport { AuthState as A, ChallengeName as C, MfaOption as M, UsernameAlias as U, AuthFormField as a };\n","// Dictionaries\n// fieldId constants\nvar USERNAME_SUFFIX = 'username';\nvar EMAIL_SUFFIX = 'email';\nvar CODE_SUFFIX = 'code';\nvar PHONE_SUFFIX = 'phone';\nvar PASSWORD_SUFFIX = 'password';\n// Country Dial Code common constants\nvar COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';\nvar COUNTRY_DIAL_CODE_DEFAULT = '+1';\n// Auth Keys\nvar AUTH_SOURCE_KEY = 'amplify-auth-source';\nvar AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState';\n// Error message Common Constants\nvar PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';\nvar NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';\nvar NO_STORAGE_MODULE_FOUND = 'No Storage module found, please ensure @aws-amplify/storage is imported';\nvar NO_INTERACTIONS_MODULE_FOUND = 'No Interactions module found, please ensure @aws-amplify/interactions is imported';\n// TOTP Messages\nvar SETUP_TOTP = 'SETUP_TOTP';\n// Select MFA Types Messages\nvar USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';\nvar USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa';\n// Common events\nvar SUCCESS = 'SUCCESS';\n// Hub Events and Channels\nvar AUTH_CHANNEL = 'auth';\nvar UI_AUTH_CHANNEL = 'UI Auth';\nvar TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';\nvar AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';\nexport { AUTH_CHANNEL as A, COUNTRY_DIAL_CODE_SUFFIX as C, EMAIL_SUFFIX as E, NO_AUTH_MODULE_FOUND as N, PHONE_EMPTY_ERROR_MESSAGE as P, SETUP_TOTP as S, TOAST_AUTH_ERROR_EVENT as T, UI_AUTH_CHANNEL as U, AUTH_STATE_CHANGE_EVENT as a, PHONE_SUFFIX as b, AUTHENTICATOR_AUTHSTATE as c, NO_INTERACTIONS_MODULE_FOUND as d, NO_STORAGE_MODULE_FOUND as e, USER_NOT_SETUP_SOFTWARE_TOKEN_MFA as f, USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA as g, COUNTRY_DIAL_CODE_DEFAULT as h, SUCCESS as i, AUTH_SOURCE_KEY as j, CODE_SUFFIX as k, PASSWORD_SUFFIX as l, USERNAME_SUFFIX as m };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { r as registerInstance, h } from './index-83f2275b.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { M as MfaOption } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { N as NO_AUTH_MODULE_FOUND, f as USER_NOT_SETUP_SOFTWARE_TOKEN_MFA, g as USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA } from './constants-d7afd96c.js';\nvar logger = new Logger('SelectMFAType');\nvar AmplifySelectMFAType = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** Fires when Verify is clicked */\n        this.handleSubmit = function (event) { return _this.verify(event); };\n        this.TOTPSetup = false;\n        this.selectMessage = null;\n        this.MFAMethod = null;\n        this.isTOTP = false;\n        this.isNoMFA = false;\n        this.isSMS = false;\n        this.loading = false;\n        this.isToastVisible = false;\n    }\n    class_1.prototype.handleRadioButtonChange = function (event) {\n        this.TOTPSetup = false;\n        this.selectMessage = null;\n        // Reseting state values to default\n        this.isNoMFA = false;\n        this.isTOTP = false;\n        this.isSMS = false;\n        this.isToastVisible = false;\n        var _a = event.target, value = _a.value, type = _a.type, checked = _a.checked;\n        var checkType = ['radio', 'checkbox'].includes(type);\n        if (value === MfaOption.SMS && checkType) {\n            this.isSMS = checked;\n        }\n        if (value === MfaOption.TOTP && checkType) {\n            this.isTOTP = checked;\n        }\n        if (value === MfaOption.NOMFA && checkType) {\n            this.isNoMFA = checked;\n        }\n    };\n    class_1.prototype.verify = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, preferredMFAData, error_1, message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // avoid submitting the form\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        logger.debug('MFA Type Values', {\n                            TOTP: this.isTOTP,\n                            SMS: this.isSMS,\n                            'No MFA': this.isNoMFA,\n                        });\n                        if (this.isTOTP) {\n                            this.MFAMethod = MfaOption.TOTP;\n                        }\n                        else if (this.isSMS) {\n                            this.MFAMethod = MfaOption.SMS;\n                        }\n                        else if (this.isNoMFA) {\n                            this.MFAMethod = MfaOption.NOMFA;\n                        }\n                        user = this.authData;\n                        if (!Auth || typeof Auth.setPreferredMFA !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.setPreferredMFA(user, this.MFAMethod)];\n                    case 2:\n                        preferredMFAData = _a.sent();\n                        logger.debug('Set Preferred MFA Succeeded', preferredMFAData);\n                        this.selectMessage = I18n.get(Translations.SUCCESS_MFA_TYPE) + \" \" + this.MFAMethod;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_1 = _a.sent();\n                        message = error_1.message;\n                        if (message === USER_NOT_SETUP_SOFTWARE_TOKEN_MFA ||\n                            message === USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA) {\n                            this.TOTPSetup = true;\n                            this.selectMessage = I18n.get(Translations.SETUP_TOTP_REQUIRED);\n                        }\n                        else {\n                            logger.debug('Set Preferred MFA failed', error_1);\n                            this.selectMessage = I18n.get(Translations.UNABLE_TO_SETUP_MFA_AT_THIS_TIME);\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        this.isToastVisible = true;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.contentBuilder = function () {\n        var _this = this;\n        if (!this.MFATypes || Object.keys(this.MFATypes).length < 2) {\n            logger.debug(I18n.get(Translations.LESS_THAN_TWO_MFA_VALUES_MESSAGE));\n            return (h(\"div\", null, h(\"a\", null, I18n.get(Translations.LESS_THAN_TWO_MFA_VALUES_MESSAGE))));\n        }\n        var _a = this.MFATypes, SMS = _a.SMS, TOTP = _a.TOTP, Optional = _a.Optional;\n        return (h(\"amplify-form-section\", { submitButtonText: I18n.get(Translations.SELECT_MFA_TYPE_SUBMIT_BUTTON_TEXT), headerText: I18n.get(Translations.SELECT_MFA_TYPE_HEADER_TEXT), handleSubmit: function (event) { return _this.handleSubmit(event); }, loading: this.loading }, SMS ? (h(\"amplify-radio-button\", { key: \"sms\", name: \"MFAType\", value: \"SMS\", label: \"SMS\", handleInputChange: function (event) { return _this.handleRadioButtonChange(event); } })) : null, TOTP ? (h(\"amplify-radio-button\", { key: \"totp\", name: \"MFAType\", value: \"TOTP\", label: \"TOTP\", handleInputChange: function (event) { return _this.handleRadioButtonChange(event); } })) : null, Optional ? (h(\"amplify-radio-button\", { key: \"noMFA\", name: \"MFAType\", value: \"NOMFA\", label: \"No MFA\", handleInputChange: function (event) { return _this.handleRadioButtonChange(event); } })) : null));\n    };\n    class_1.prototype.renderToast = function () {\n        var _this = this;\n        if (this.isToastVisible && this.selectMessage) {\n            return (h(\"amplify-toast\", { message: this.selectMessage, handleClose: function () {\n                    _this.selectMessage = null;\n                    _this.isToastVisible = false;\n                } }));\n        }\n        return null;\n    };\n    class_1.prototype.render = function () {\n        return (h(\"div\", null, this.contentBuilder(), this.TOTPSetup ? h(\"amplify-totp-setup\", { user: this.authData }) : null, this.renderToast()));\n    };\n    return class_1;\n}());\nexport { AmplifySelectMFAType as amplify_select_mfa_type };\n"],"sourceRoot":""}